% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_simulated_data.R
\name{generate_simulated_data}
\alias{generate_simulated_data}
\title{Generate simulated data from the underlying model's generative process}
\usage{
generate_simulated_data(
  r_in_weeks = c(rep(1.1, 5), rep(0.9, 5), 1 + 0.007 * 1:16),
  n_sites = 4,
  ww_pop_sites = c(4e+05, 2e+05, 1e+05, 50000),
  pop_size = 1e+06,
  site = c(1, 1, 2, 3, 4),
  lab = c(1, 2, 3, 3, 3),
  ot = 90,
  nt = 9,
  forecast_horizon = 28,
  sim_start_date = lubridate::ymd("2023-09-01"),
  hosp_wday_effect = c(0.95, 1.01, 1.02, 1.02, 1.01, 1, 0.99)/7,
  i0_over_n = 5e-04,
  initial_growth = 1e-04,
  sd_in_lab_level_multiplier = 0.25,
  mean_obs_error_in_ww_lab_site = 0.2,
  mean_reporting_freq = 1/5,
  sd_reporting_freq = 1/20,
  mean_reporting_latency = 7,
  sd_reporting_latency = 3,
  mean_log_lod = 3.8,
  sd_log_lod = 0.2,
  input_params_path = fs::path_package("extdata", "example_params.toml", package =
    "wwinference"),
  use_spatial_corr = TRUE,
  corr_function = exponential_decay_corr_func_r,
  corr_fun_params = list(dist_matrix = as.matrix(dist(data.frame(x = c(85, 37, 48, 7), y
    = c(12, 75, 81, 96), diag = TRUE, upper = TRUE))), phi = 25, l = 1),
  phi_rt = 0.6,
  sigma_eps = sqrt(0.02),
  scaling_factor = 0.01,
  aux_site_bool = TRUE,
  init_stat = TRUE
)
}
\arguments{
\item{r_in_weeks}{vector indcating the mean weekly R(t) that drives infection
dynamics at the state-level. This gets jittered with random noise to add
week-to-week variation.}

\item{n_sites}{integer indicating the number of sites}

\item{ww_pop_sites}{vector indicating the population size in the
catchment area in each of those sites (order must match)}

\item{pop_size}{integer indicating the population size in the hypothetical
state}

\item{site}{vector of integers indicating which site (WWTP) each separate
lab-site observation comes frm}

\item{lab}{vector of integers indicating which lab the lab-site observations
come from}

\item{ot}{integer indicating the observed time: length of hospital admissions
calibration time in days}

\item{nt}{integer indicating the nowcast time: length of time between last
hospital admissions date and forecast date in days}

\item{forecast_horizon}{integer indicating the duration of the forecast in
days e.g. 28 days}

\item{sim_start_date}{character string in ISO8601 format YYYY-MM-DD
indicating the start date of the simulation, used to get a weekday vector}

\item{hosp_wday_effect}{a vector that is a simplex of length 7 describing
how the hospital admissions are spread out over a week, starting at
Monday = 1}

\item{i0_over_n}{float between 0 and 1 indicating the initial per capita
infections in the state}

\item{initial_growth}{float indicating the exponential growth rate in
infections (daily) during the unobserved time}

\item{sd_in_lab_level_multiplier}{float indicating the standard deviation in
the log of the site-lab level multiplier determining how much variation
there is systematically in site-labs from the state mean}

\item{mean_obs_error_in_ww_lab_site}{float indicating the mean day-to-day
variation in observed wastewater concentrations across all lab-sites}

\item{mean_reporting_freq}{float indicating the mean frequency of wastewater
measurements across sites in per day (e.g. 1/7 is once per week)}

\item{sd_reporting_freq}{float indicating the standard deviation in the
frequency of wastewater measurements across sites}

\item{mean_reporting_latency}{float indicating the mean time from forecast
date to last wastewater sample collection date, across sites}

\item{sd_reporting_latency}{float indicating the standard deviation in the
time from the forecast date to the last wastewater sample collection date,
across sites}

\item{mean_log_lod}{float indicating the mean log of the LOD in each lab-site}

\item{sd_log_lod}{float indicating the standard deviation in the log of the
LOD across sites}

\item{input_params_path}{path to the toml file with the parameters to use
to generate the simulated data}

\item{use_spatial_corr}{Boolean to use spatial process, default is TRUE}

\item{corr_function}{Correlation function for spatial site correlations,
defaulted to exponential decay correlation function}

\item{corr_fun_params}{Parameters required for correlation function,
defaulted to presets for exponential decay correlation function}

\item{phi_rt}{Coefficient for AR(1) temporal correlation on subpopulation
deviations}

\item{sigma_eps}{Parameter for construction of covariance matrix of spatial
epsilon}

\item{scaling_factor}{Scaling factor for aux site}

\item{aux_site_bool}{Boolean to use the aux site framework with
scaling factor.}

\item{init_stat}{Boolean. Should the initial value of the AR(1) be drawn
from the process's stationary distribution (\code{TRUE}) or from the process's
conditional error distribution (\code{FALSE})? Note that the process only has
a defined stationary distribution if \code{phi_rt} < 1.
Default \code{FALSE}.}
}
\value{
a list containing three dataframes. hosp_data is a dataframe
containing the number of daily hospital admissions by day for a theoretical
US state, for the duration of the specified calibration period.
hosp_data_eval is a dataframe containing the number of daily hospital
admissions by day for a theoretical US state, for the entire evaluation
period.
ww_data is a dataframe containing the measured wastewater concentrations
in each site alongside other metadata necessary for modeling that data.
}
\description{
Function that allows the user to generate hospital admissions and site-level
wastewater data directly from the generative model, specifying the conditions
and parameters to generate from.
}
\examples{
# Generate a simulated dataset from a hypothetical state with 6 sites and 2
# different labs
sim_data <- generate_simulated_data(
  n_sites = 6,
  site = c(1, 2, 3, 4, 5, 6, 6),
  lab = c(1, 1, 1, 1, 2, 2, 3),
  ww_pop_sites = c(1e5, 4e5, 2e5, 1.5e5, 5e4, 3e5),
  pop_size = 2e6,
  use_spatial_corr = TRUE,
  corr_function = exponential_decay_corr_func_r,
  corr_fun_params = list(
    dist_matrix = as.matrix(
      dist(
        data.frame(
          x = c(85, 37, 48, 7, 45, 36),
          y = c(12, 75, 81, 96, 24, 43),
          diag = TRUE,
          upper = TRUE
        )
      )
    ),
    phi = 25,
    l = 1
  ),
  phi_rt = 0.6,
  sigma_eps = sqrt(0.02),
  scaling_factor = 0.01,
  aux_site_bool = TRUE,
  init_stat = TRUE
)
hosp_data <- sim_data$hosp_data
ww_data <- sim_data$ww_data
}
