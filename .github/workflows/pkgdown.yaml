# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, prod]
  pull_request:
    branches: [main, prod]
  release:
    types: [published]
  workflow_dispatch:

name: pkgdown

jobs:
  build:

    strategy:
      matrix:
        version:
          - 'release'
          - 'devel'

    name: pkgdown site build (${{ matrix.version }})

    runs-on: ubuntu-latest
    # Only restrict concurrency for non-PR jobs
    concurrency:
      group: pkgdown-${{ github.event_name != 'pull_request' || github.run_id }}-${{ matrix.version }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      id-token: write
      pages: write
    steps:

      ##########################################################################
      # Identifying the latest and corresponding tag/sha to download
      #########################################################################
      - name: Check the repo to download
        id: commit
        run: |

          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/CDCgov/ww-inference-model/releases/latest |> \
            latest_release-${{ github.sha }}

          cat latest_release-${{ github.sha }}

          echo -n "This job is running on tag/sha: "
          if [ "${{ matrix.version }}" = "release" ]; then
            echo $(jq -r '.tag_name' latest_release-${{ github.sha }})
            echo "tag=$(jq -r '.tag_name' latest_release-${{ github.sha }})" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo ${{ github.sha }}
          fi

      - name: Checking if the release is cached
        if: ${{ matrix.version == 'release' }}
        id: cache-hit
        uses: actions/cache@v3
        with:
          key: ${{ matrix.version }}-${{ steps.commit.outputs.tag }}
          path: './docs/'

      # These steps only happen if the cache is not hit
      - uses: actions/checkout@v4
        if: ${{ matrix.version != 'release' && steps.cache-hit.outputs.cache-hit != 'true' }}
        with:
          ref: ${{ steps.commit.outputs.tag }}

      - uses: r-lib/actions/setup-pandoc@v2
        if: ${{ matrix.version != 'release' && steps.cache-hit.outputs.cache-hit != 'true' }}
        with:
          pandoc-version: "2.19.2"

      - uses: r-lib/actions/setup-r@v2
        if: ${{ matrix.version != 'release' && steps.cache-hit.outputs.cache-hit != 'true' }}
        with:
          r-version: "release"
          use-public-rspm: true
          install-r: false
          extra-repositories: "https://mc-stan.org/r-packages/"
      - uses: r-lib/actions/setup-r-dependencies@v2
        if: ${{ matrix.version != 'release' && steps.cache-hit.outputs.cache-hit != 'true' }}
        with:
          pak-version: rc
          extra-packages: any::pkgdown local::.
          needs: website

      - name: "Install cmdstan via cmdstanr"
        uses: epinowcast/actions/install-cmdstan@v1
        if: ${{ matrix.version != 'release' && steps.cache-hit.outputs.cache-hit != 'true' }}
        with:
          cmdstan-version: "latest"

      - name: Build site
        if: ${{ matrix.version != 'release' && steps.cache-hit.outputs.cache-hit != 'true' }}
        run: "pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)"
        shell: Rscript {0}

      - name: Upload artifact for GH pages deployment
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          path: "./docs/"
          name: pkgdown-site-${{ matrix.version }}

  combine:
    outputs:
      page_artifact_id: ${{ steps.upload-artifact.outputs.artifact_id }}

    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: pkgdown-site-release
          path: ./docs/

      - name: Download dev artifact
        uses: actions/download-artifact@v4
        with:
          name: pkgdown-site-devel
          path: ./docs/dev/

      - name: Upload pages artifact
        id: upload-artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/

  deploy:
    # check builds on PRs but only deploy when main changes
    if: ${{ github.event_name != 'pull_request' }}
    needs: combine
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub pages
        uses: actions/deploy-pages@v4

  post-page-artifact:
    # only comment on PRs
    if: ${{ github.event_name == 'pull_request' }}
    needs: combine
    runs-on: ubuntu-latest
    permissions:
        contents: read
        pull-requests: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
           issue-number: ${{ github.event.pull_request.number }}
           comment-author: 'github-actions[bot]'
           body-includes: Your page is ready to preview

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Thank you for your contribution, @${{ github.triggering_actor }} :rocket:! Your page is ready to preview [here](https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}/artifacts/${{ needs.build.outputs.page_artifact_id }})
          edit-mode: replace
